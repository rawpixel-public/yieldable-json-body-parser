name: ci

on:
- pull_request
- push

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name:
        - Node.js 16.x
        - Node.js 17.x
        - Node.js 18.x
        - Node.js 19.x

        include:
        - name: Node.js 16.x
          node-version: "16"

        - name: Node.js 17.x
          node-version: "17"

        - name: Node.js 18.x
          node-version: "18"

        - name: Node.js 19.x
          node-version: "19"

    steps:
    - uses: actions/checkout@v3

    - name: Install Node.js ${{ matrix.node-version }}
      shell: bash -eo pipefail -l {0}
      run: |
        nvm install --default ${{ matrix.node-version }}
        dirname "$(nvm which ${{ matrix.node-version }})" >> "$GITHUB_PATH"

    - name: Configure npm
      run: npm config set shrinkwrap false

    - name: Install npm module(s) ${{ matrix.npm-i }}
      run: npm install --save-dev ${{ matrix.npm-i }}
      if: matrix.npm-i != ''

    - name: Install Node.js dependencies
      run: npm install

    - name: List environment
      id: list_env
      shell: bash
      run: |
        echo "node@$(node -v)"
        echo "npm@$(npm -v)"
        npm -s ls ||:
        (npm -s ls --depth=0 ||:) | awk -F'[ @]' 'NR>1 && $2 { print "::set-output name=" $2 "::" $3 }'

    - name: Run tests
      shell: bash
      run: |
        if npm -ps ls nyc | grep -q nyc; then
          npm run test-ci
          cp coverage/lcov.info "coverage/${{ matrix.name }}.lcov"
        else
          npm test
        fi

    - name: Lint code
      if: steps.list_env.outputs.eslint != ''
      run: npm run lint

    - name: Collect code coverage
      if: steps.list_env.outputs.nyc != ''
      run: |
        if [[ -d ./coverage ]]; then
          mv ./coverage "./${{ matrix.name }}"
          mkdir ./coverage
          mv "./${{ matrix.name }}" "./coverage/${{ matrix.name }}"
        fi

    - name: Upload code coverage
      uses: actions/upload-artifact@v3
      if: steps.list_env.outputs.nyc != ''
      with:
        name: coverage
        path: ./coverage
        retention-days: 1

  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install lcov
      shell: bash
      run: sudo apt-get -y install lcov

    - name: Collect coverage reports
      uses: actions/download-artifact@v3
      with:
        name: coverage
        path: ./coverage

    - name: Merge coverage reports
      shell: bash
      run: find ./coverage -name lcov.info -exec printf '-a %q\n' {} \; | xargs lcov -o ./coverage/lcov.info

    - name: Upload coverage report
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
